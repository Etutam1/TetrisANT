/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PaqueteIU;

import PaqueteModelo.Xogo;
import PaqueteModelo.Sonido;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author a22lucastf
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    //ATRIBUTOS
    private Timer timer;
    private Xogo xogo;
    private int contadorMusica = 0;
    private Sonido sonido = new Sonido();

    //CONSTRUCTOR
    public VentanaPrincipal() {

        initComponents();
        this.setLocationRelativeTo(null);
        sonido.reproducirMusicaMenu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameLevels = new javax.swing.JFrame();
        panelFondoLevels = new javax.swing.JPanel();
        labelTituloLevel = new javax.swing.JLabel();
        extremeRadioB = new javax.swing.JRadioButton();
        noobRadioB = new javax.swing.JRadioButton();
        easyRadioB = new javax.swing.JRadioButton();
        mediumRadioB = new javax.swing.JRadioButton();
        hardRadioB = new javax.swing.JRadioButton();
        okButtonLevel = new javax.swing.JButton();
        labelFondoLevels = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        frameJuego = new javax.swing.JFrame();
        panelFondo = new javax.swing.JPanel();
        panelPausa = new javax.swing.JPanel();
        retryPanelPausaButton = new javax.swing.JButton();
        exitPanelPausaButton = new javax.swing.JButton();
        menuPanelPausaButton = new javax.swing.JButton();
        labelFondo1 = new javax.swing.JLabel();
        panelJuego = new javax.swing.JPanel();
        scoreLabel = new javax.swing.JLabel();
        scoreTextLabel = new javax.swing.JLabel();
        LineasLabel = new javax.swing.JLabel();
        lineasTextLabel = new javax.swing.JLabel();
        levelLabel = new javax.swing.JLabel();
        levelTextLabel = new javax.swing.JLabel();
        pauseButton = new javax.swing.JToggleButton();
        botonSonidoJuego = new javax.swing.JButton();
        labelFondo = new javax.swing.JLabel();
        panelGameOver = new javax.swing.JPanel();
        gameOverLabel = new javax.swing.JLabel();
        nombreJugadorLabel = new javax.swing.JTextField();
        jugadorLabel = new javax.swing.JLabel();
        gameOverOKButton = new javax.swing.JButton();
        exitJuegoGameOverButton = new javax.swing.JButton();
        panelScores = new javax.swing.JPanel();
        scoresTituloLabel = new javax.swing.JLabel();
        retryGameOverButton = new javax.swing.JButton();
        exitJuegoTotalScoresButton = new javax.swing.JButton();
        menuJuegoTotalScoresButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        scoresTable = new javax.swing.JTable();
        panelMenu = new javax.swing.JPanel();
        exitButtonMenu = new javax.swing.JButton();
        playButtonMenu = new javax.swing.JButton();
        labelTituloTetris = new javax.swing.JLabel();
        levelsButton = new javax.swing.JButton();
        botonSonidoMenu = new javax.swing.JButton();
        fondoLabel = new javax.swing.JLabel();

        frameLevels.setUndecorated(true);
        frameLevels.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelFondoLevels.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTituloLevel.setFont(new java.awt.Font("Monospaced", 1, 36)); // NOI18N
        labelTituloLevel.setForeground(new java.awt.Color(255, 255, 255));
        labelTituloLevel.setText("SELECT DIFFICULTY");
        panelFondoLevels.add(labelTituloLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        buttonGroup1.add(extremeRadioB);
        extremeRadioB.setFont(new java.awt.Font("Monospaced", 1, 30)); // NOI18N
        extremeRadioB.setForeground(new java.awt.Color(255, 255, 255));
        extremeRadioB.setText(" EXTREME ");
        panelFondoLevels.add(extremeRadioB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, -1, -1));

        buttonGroup1.add(noobRadioB);
        noobRadioB.setFont(new java.awt.Font("Monospaced", 1, 30)); // NOI18N
        noobRadioB.setForeground(new java.awt.Color(255, 255, 255));
        noobRadioB.setText(" NOOB");
        panelFondoLevels.add(noobRadioB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, -1, -1));

        buttonGroup1.add(easyRadioB);
        easyRadioB.setFont(new java.awt.Font("Monospaced", 1, 30)); // NOI18N
        easyRadioB.setForeground(new java.awt.Color(255, 255, 255));
        easyRadioB.setText(" EASY");
        panelFondoLevels.add(easyRadioB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, -1, -1));

        buttonGroup1.add(mediumRadioB);
        mediumRadioB.setFont(new java.awt.Font("Monospaced", 1, 30)); // NOI18N
        mediumRadioB.setForeground(new java.awt.Color(255, 255, 255));
        mediumRadioB.setText(" MEDIUM ");
        panelFondoLevels.add(mediumRadioB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        buttonGroup1.add(hardRadioB);
        hardRadioB.setFont(new java.awt.Font("Monospaced", 1, 30)); // NOI18N
        hardRadioB.setForeground(new java.awt.Color(255, 255, 255));
        hardRadioB.setText(" HARD ");
        panelFondoLevels.add(hardRadioB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        okButtonLevel.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        okButtonLevel.setText("OK");
        okButtonLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonLevelActionPerformed(evt);
            }
        });
        panelFondoLevels.add(okButtonLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 400, 100, 40));

        labelFondoLevels.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/fondo.jpg"))); // NOI18N
        labelFondoLevels.setToolTipText("");
        labelFondoLevels.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelFondoLevels.setMinimumSize(new java.awt.Dimension(873, 800));
        panelFondoLevels.add(labelFondoLevels, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 520));

        frameLevels.getContentPane().add(panelFondoLevels, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, -1));

        frameJuego.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        frameJuego.setTitle("Tetris");
        frameJuego.setBackground(new java.awt.Color(204, 204, 204));
        frameJuego.setForeground(java.awt.Color.gray);
        frameJuego.setMinimumSize(new java.awt.Dimension(625, 820));
        frameJuego.setUndecorated(true);
        frameJuego.setSize(new java.awt.Dimension(625, 820));
        frameJuego.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                frameJuegoKeyPressed(evt);
            }
        });
        frameJuego.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelFondo.setFocusable(false);
        panelFondo.setPreferredSize(new java.awt.Dimension(630, 850));
        panelFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelPausa.setBackground(new java.awt.Color(255, 255, 255));
        panelPausa.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                panelPausaPropertyChange(evt);
            }
        });
        panelPausa.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        retryPanelPausaButton.setText("RETRY");
        retryPanelPausaButton.setFocusable(false);
        retryPanelPausaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retryPanelPausaButtonActionPerformed(evt);
            }
        });
        panelPausa.add(retryPanelPausaButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 100, 40));

        exitPanelPausaButton.setText("EXIT");
        exitPanelPausaButton.setFocusable(false);
        exitPanelPausaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitPanelPausaButtonMouseClicked(evt);
            }
        });
        panelPausa.add(exitPanelPausaButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 100, 40));

        menuPanelPausaButton.setText("MENU");
        menuPanelPausaButton.setFocusable(false);
        menuPanelPausaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPanelPausaButtonActionPerformed(evt);
            }
        });
        panelPausa.add(menuPanelPausaButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 100, 40));

        labelFondo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/fondo.jpg"))); // NOI18N
        labelFondo1.setToolTipText("");
        labelFondo1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelFondo1.setMinimumSize(new java.awt.Dimension(873, 800));
        panelPausa.add(labelFondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 250));

        panelFondo.add(panelPausa, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 390, 250));

        panelJuego.setBackground(new java.awt.Color(0, 0, 0));
        panelJuego.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelJuego.setNextFocusableComponent(playButtonMenu);
        panelJuego.setLayout(null);
        panelFondo.add(panelJuego, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 400, 800));

        scoreLabel.setBackground(new java.awt.Color(255, 255, 255));
        scoreLabel.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        scoreLabel.setForeground(new java.awt.Color(255, 255, 255));
        scoreLabel.setText("SCORE");
        panelFondo.add(scoreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        scoreTextLabel.setBackground(new java.awt.Color(255, 255, 255));
        scoreTextLabel.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        scoreTextLabel.setForeground(new java.awt.Color(255, 255, 255));
        scoreTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreTextLabel.setText("0");
        panelFondo.add(scoreTextLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 150, -1));

        LineasLabel.setBackground(new java.awt.Color(255, 255, 255));
        LineasLabel.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        LineasLabel.setForeground(new java.awt.Color(255, 255, 255));
        LineasLabel.setText("LINEAS");
        panelFondo.add(LineasLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        lineasTextLabel.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        lineasTextLabel.setForeground(new java.awt.Color(255, 255, 255));
        lineasTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lineasTextLabel.setText("0");
        panelFondo.add(lineasTextLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 150, -1));

        levelLabel.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        levelLabel.setBackground(new java.awt.Color(255, 255, 255));
        levelLabel.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        levelLabel.setForeground(new java.awt.Color(255, 255, 255));
        levelLabel.setText("LEVEL");
        panelFondo.add(levelLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 150, 70));

        levelTextLabel.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        levelTextLabel.setBackground(new java.awt.Color(255, 255, 255));
        levelTextLabel.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        levelTextLabel.setForeground(new java.awt.Color(255, 255, 255));
        levelTextLabel.setText("0");
        panelFondo.add(levelTextLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, 90, 70));

        pauseButton.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        pauseButton.setText("||");
        pauseButton.setFocusable(false);
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });
        panelFondo.add(pauseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 590, 90, 80));

        botonSonidoJuego.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/sound.png"))); // NOI18N
        botonSonidoJuego.setFocusable(false);
        botonSonidoJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSonidoJuegoActionPerformed(evt);
            }
        });
        panelFondo.add(botonSonidoJuego, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 760, 60, 60));

        labelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/fondo.jpg"))); // NOI18N
        labelFondo.setToolTipText("");
        labelFondo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelFondo.setMinimumSize(new java.awt.Dimension(873, 800));
        panelFondo.add(labelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 625, 849));

        frameJuego.getContentPane().add(panelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 850));

        panelGameOver.setBackground(new java.awt.Color(0, 0, 0));
        panelGameOver.setFocusable(false);
        panelGameOver.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gameOverLabel.setBackground(new java.awt.Color(255, 255, 255));
        gameOverLabel.setFont(new java.awt.Font("Monospaced", 0, 48)); // NOI18N
        gameOverLabel.setForeground(new java.awt.Color(255, 255, 255));
        gameOverLabel.setText("GAME OVER");
        panelGameOver.add(gameOverLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 60, 290, 91));
        panelGameOver.add(nombreJugadorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 180, 30));

        jugadorLabel.setBackground(new java.awt.Color(255, 255, 255));
        jugadorLabel.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jugadorLabel.setForeground(new java.awt.Color(255, 255, 255));
        jugadorLabel.setText("JUGADOR ->");
        panelGameOver.add(jugadorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 120, 30));

        gameOverOKButton.setText("OK");
        gameOverOKButton.setFocusable(false);
        gameOverOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameOverOKButtonActionPerformed(evt);
            }
        });
        panelGameOver.add(gameOverOKButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 210, -1, 30));

        exitJuegoGameOverButton.setText("EXIT");
        exitJuegoGameOverButton.setFocusable(false);
        exitJuegoGameOverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitJuegoGameOverButtonActionPerformed(evt);
            }
        });
        panelGameOver.add(exitJuegoGameOverButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, 100, 40));

        frameJuego.getContentPane().add(panelGameOver, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 850));

        panelScores.setBackground(new java.awt.Color(0, 0, 0));
        panelScores.setFocusable(false);
        panelScores.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scoresTituloLabel.setBackground(new java.awt.Color(255, 255, 255));
        scoresTituloLabel.setFont(new java.awt.Font("Monospaced", 0, 48)); // NOI18N
        scoresTituloLabel.setForeground(new java.awt.Color(255, 255, 255));
        scoresTituloLabel.setText("TOTAL SCORES");
        panelScores.add(scoresTituloLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 350, 91));

        retryGameOverButton.setText("RETRY");
        retryGameOverButton.setFocusable(false);
        retryGameOverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retryGameOverButtonActionPerformed(evt);
            }
        });
        panelScores.add(retryGameOverButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 690, 100, 40));

        exitJuegoTotalScoresButton.setText("EXIT");
        exitJuegoTotalScoresButton.setFocusable(false);
        exitJuegoTotalScoresButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitJuegoTotalScoresButtonMouseClicked(evt);
            }
        });
        panelScores.add(exitJuegoTotalScoresButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 690, 100, 40));

        menuJuegoTotalScoresButton.setText("MENU");
        menuJuegoTotalScoresButton.setFocusable(false);
        menuJuegoTotalScoresButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuJuegoTotalScoresButtonActionPerformed(evt);
            }
        });
        panelScores.add(menuJuegoTotalScoresButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 690, 100, 40));

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setOpaque(false);

        scoresTable.setAutoCreateRowSorter(true);
        scoresTable.setBackground(new java.awt.Color(0, 0, 0));
        scoresTable.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        scoresTable.setForeground(new java.awt.Color(255, 255, 255));
        scoresTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Jugador", "Score"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scoresTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        scoresTable.setFocusable(false);
        scoresTable.setOpaque(false);
        scoresTable.setSelectionBackground(new java.awt.Color(153, 153, 153));
        scoresTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                scoresTablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(scoresTable);

        panelScores.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 370, 500));

        frameJuego.getContentPane().add(panelScores, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 850));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tetris");
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(102, 102, 102));
        setName("frameVentanaPrincipal"); // NOI18N
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelMenu.setFocusable(false);
        panelMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exitButtonMenu.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        exitButtonMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/EXIT_STOPPED.png"))); // NOI18N
        exitButtonMenu.setBorderPainted(false);
        exitButtonMenu.setContentAreaFilled(false);
        exitButtonMenu.setFocusable(false);
        exitButtonMenu.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/EXIT.gif"))); // NOI18N
        exitButtonMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMenuMouseClicked(evt);
            }
        });
        panelMenu.add(exitButtonMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 151, -1));

        playButtonMenu.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        playButtonMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/PLAY_STOPPED.png"))); // NOI18N
        playButtonMenu.setContentAreaFilled(false);
        playButtonMenu.setFocusable(false);
        playButtonMenu.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/PLAY.gif"))); // NOI18N
        playButtonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonMenuActionPerformed(evt);
            }
        });
        panelMenu.add(playButtonMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 151, 107));

        labelTituloTetris.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/tetris.png"))); // NOI18N
        panelMenu.add(labelTituloTetris, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 350, -1));

        levelsButton.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        levelsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/Levels-1.png.png"))); // NOI18N
        levelsButton.setContentAreaFilled(false);
        levelsButton.setFocusable(false);
        levelsButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/Levels.gif"))); // NOI18N
        levelsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                levelsButtonActionPerformed(evt);
            }
        });
        panelMenu.add(levelsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 151, 107));

        botonSonidoMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/sound.png"))); // NOI18N
        botonSonidoMenu.setFocusable(false);
        botonSonidoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSonidoMenuActionPerformed(evt);
            }
        });
        panelMenu.add(botonSonidoMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 60, 60));

        fondoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/fondo.jpg"))); // NOI18N
        fondoLabel.setToolTipText("");
        panelMenu.add(fondoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 520));

        getContentPane().add(panelMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonMenuActionPerformed
        this.iniciarPartida();
    }//GEN-LAST:event_playButtonMenuActionPerformed

    private void levelsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_levelsButtonActionPerformed
        this.frameLevels.setVisible(rootPaneCheckingEnabled);
        this.frameLevels.setSize(410, 520);
        this.frameLevels.setLocationRelativeTo(this.rootPane);
    }//GEN-LAST:event_levelsButtonActionPerformed

    private void exitButtonMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMenuMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitButtonMenuMouseClicked

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed

        if (getPauseButton().isSelected()) {
            sonido.muteMusica();
            getTimer().stop();
            xogo.setPausa(true);
            this.cambiarVisibilidadPanel(this.panelPausa, true);

        } else {
            if (contadorMusica == 0) {
                sonido.unmuteMusica();
            }
            getPauseButton().setFocusable(false);
            getTimer().start();
            xogo.setPausa(false);
            this.cambiarVisibilidadPanel(this.panelPausa, false);
        }
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void menuJuegoTotalScoresButtonActionPerformed(java.awt.event.ActionEvent evt) {
        volverAMenuPrincipal();

    }

    private void volverAMenuPrincipal() {
        this.pauseButton.setSelected(false);
        cambiarImagenBotones();
        this.EliminarComponentesPanelJuego();
        this.cambiarVisibilidadFrame(this.frameJuego, false);
        this.cambiarVisibilidadFrame(this, true);
        this.cambiarVisibilidadPanel(panelJuego, true);
        this.cambiarVisibilidadPanel(panelFondo, true);
        if (contadorMusica != 1) {
            sonido.reproducirMusicaMenu();
        }
    }
    private void frameJuegoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_frameJuegoKeyPressed

        if (!this.xogo.isPausa() && !this.xogo.isFinXogo() ) {

            if (comprobarPulsacionTeclaA(evt)) {
                this.xogo.moverFichaEsquerda();
            }
            if (comprobarPulsacionTeclaD(evt)) {
                this.xogo.moverFichaDereita();
            }
            if (comprobarPulsacionTeclaS(evt)) {
                this.xogo.moverFichaAbaixo();
            }
            if (comprobarPulsacionTeclaW(evt)) {
                this.xogo.RotarFicha();
            }
        }
    }//GEN-LAST:event_frameJuegoKeyPressed

    private boolean comprobarPulsacionTeclaD(KeyEvent evt) {
        boolean teclaPulsada = false;
        if (KeyEvent.getKeyText(evt.getKeyCode()).equals("D")) {
            teclaPulsada = true;
        }
        return teclaPulsada;
    }

    private boolean comprobarPulsacionTeclaA(KeyEvent evt) {
        boolean teclaPulsada = false;
        if (KeyEvent.getKeyText(evt.getKeyCode()).equals("A")) {
            teclaPulsada = true;
        }
        return teclaPulsada;
    }

    private boolean comprobarPulsacionTeclaS(KeyEvent evt) {
        boolean teclaPulsada = false;
        if (KeyEvent.getKeyText(evt.getKeyCode()).equals("S")) {
            teclaPulsada = true;
        }
        return teclaPulsada;
    }

    private boolean comprobarPulsacionTeclaW(KeyEvent evt) {
        boolean teclaPulsada = false;
        if (KeyEvent.getKeyText(evt.getKeyCode()).equals("W")) {
            teclaPulsada = true;
        }
        return teclaPulsada;
    }


    private void gameOverOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameOverOKButtonActionPerformed
        if (this.comprobarFieldTextEBaleiro()) {
            this.mostrarJDialogIntroducirNombre();
        } else {
            this.cambiarVisibilidadPanel(panelGameOver, false);
            xogo.gestionarResultados();
            this.cambiarVisibilidadPanel(panelScores, true);
            this.resetFieldTextNombreJugador();
        }
    }//GEN-LAST:event_gameOverOKButtonActionPerformed

    private void mostrarJDialogIntroducirNombre() throws HeadlessException {
        JOptionPane.showMessageDialog(null, "INTRODUCE TU NOMBRE POR FAVOR");
    }

    private void resetFieldTextNombreJugador() {
        getNombreJugadorLabel().setText("");
    }


    private void botonSonidoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSonidoMenuActionPerformed
        muteyDesmuteMusica();
    }//GEN-LAST:event_botonSonidoMenuActionPerformed

    private void scoresTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_scoresTablePropertyChange
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(Color.BLACK);
        headerRenderer.setForeground(Color.WHITE);
        headerRenderer.setHorizontalAlignment(JLabel.CENTER);
        this.getScoresTable().getTableHeader().setDefaultRenderer(headerRenderer);
        this.getScoresTable().setDefaultRenderer(Object.class, headerRenderer);
        this.getScoresTable().setBorder(BorderFactory.createEmptyBorder());
        this.getScoresTable().getParent().setBackground(Color.black);
    }//GEN-LAST:event_scoresTablePropertyChange

    private void botonSonidoJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSonidoJuegoActionPerformed
        muteyDesmuteMusica();
    }//GEN-LAST:event_botonSonidoJuegoActionPerformed

    private void retryGameOverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retryGameOverButtonActionPerformed
        reiniciarPartida();
        this.frameJuego.requestFocus();
    }//GEN-LAST:event_retryGameOverButtonActionPerformed

    private void okButtonLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonLevelActionPerformed
        this.cambiarVisibilidadFrame(frameLevels, false);
    }//GEN-LAST:event_okButtonLevelActionPerformed

    private void exitJuegoTotalScoresButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitJuegoTotalScoresButtonMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitJuegoTotalScoresButtonMouseClicked

    private void exitJuegoGameOverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitJuegoGameOverButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitJuegoGameOverButtonActionPerformed

    private void panelPausaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_panelPausaPropertyChange

    }//GEN-LAST:event_panelPausaPropertyChange

    private void retryPanelPausaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retryPanelPausaButtonActionPerformed
        this.pauseButton.setSelected(false);
        cambiarImagenBotones();
        reiniciarPartida();
        this.frameJuego.requestFocus();
    }//GEN-LAST:event_retryPanelPausaButtonActionPerformed

    private void exitPanelPausaButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitPanelPausaButtonMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitPanelPausaButtonMouseClicked

    private void menuPanelPausaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPanelPausaButtonActionPerformed
        volverAMenuPrincipal();
    }//GEN-LAST:event_menuPanelPausaButtonActionPerformed

    private boolean comprobarFieldTextEBaleiro() {
        boolean eBaleiro = false;
        if (this.getNombreJugadorLabel().getText().isBlank()) {
            eBaleiro = true;
        }
        return eBaleiro;
    }

    private void muteyDesmuteMusica() {
        this.contadorMusica++;
        if (this.contadorMusica == 1) {
            sonido.muteMusica();
            mutearMusica();
        } else {
            sonido.unmuteMusica();
            desmutearMusica();
        }

    }

    private void desmutearMusica() {
        this.contadorMusica = 0;
        cambiarImagenBotones();
        if (frameJuego.isVisible()) {
            sonido.unmuteMusica();
        } else {
            sonido.unmuteMusica();
        }
    }

    private void cambiarImagenBotones() {
        if (contadorMusica == 0) {
            this.botonSonidoJuego.setIcon(new ImageIcon(("src\\Resources\\Imagenes\\sound.png")));
            this.botonSonidoMenu.setIcon(new ImageIcon(("src\\Resources\\Imagenes\\sound.png")));
        } else {
            this.botonSonidoJuego.setIcon(new ImageIcon(("src\\Resources\\Imagenes\\mute.png")));
            this.botonSonidoMenu.setIcon(new ImageIcon(("src\\Resources\\Imagenes\\mute.png")));
        }
    }

    private void mutearMusica() {
        cambiarImagenBotones();
        if (frameJuego.isVisible()) {
            sonido.muteMusica();
        } else {
            sonido.muteMusica();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new VentanaPrincipal().setVisible(true);

            }
        });
    }

    private void iniciarPartida() {
        sonido.getMusica().stop();
        this.gestionarVisivilidadPaneles();
        this.xogo = new Xogo(comprobarLevelInicialElegido(), false, this);
        if (contadorMusica == 0) {
            sonido.reproducirMusicaPartida();
        }
        this.mostrarContadores();
        this.xogo.xenerarNovaFicha();
        this.iniciarTimer();
    }

    private void mostrarContadores() {
        this.mostrarLevel(this.xogo.getLevel());
        this.mostrarNumeroLineas(this.xogo.getNumeroLineas());
    }

    private void gestionarVisivilidadPaneles() {
        this.cambiarVisibilidadPanel(this.panelPausa, false);
        this.ocultarPanelesFinalPartida();
        this.cambiarVisibilidadFrame(this, false);
        this.cambiarVisibilidadFrame(this.frameJuego, true);
        this.frameJuego.setLocationRelativeTo(this.rootPane);
    }

    public void mostrarFinDoXogo() {
        sonido.getMusica().stop();
        sonido.reproducirMusicaGameOver();
        this.pararTimer();
        this.cambiarVisibilidadPanel(this.panelJuego, false);
        this.cambiarVisibilidadPanel(this.panelFondo, false);
        this.cambiarVisibilidadPanel(this.panelGameOver, true);
    }

    private void reiniciarPartida() {
        this.EliminarComponentesPanelJuego();
        sonido.getMusica().stop();
        this.mostrarPanelesInicioPartida();
        this.iniciarPartida();
    }

    private void mostrarPanelesInicioPartida() {
        this.cambiarVisibilidadPanel(this.panelJuego, true);
        this.cambiarVisibilidadPanel(this.panelFondo, true);
    }

    private void pararTimer() {
        this.timer.stop();

    }

    private void ocultarPanelesFinalPartida() {
        this.cambiarVisibilidadPanel(this.panelGameOver, false);
        this.cambiarVisibilidadPanel(this.panelScores, false);
    }

    private void cambiarVisibilidadPanel(JPanel panel, boolean visibilidad) {
        panel.setVisible(visibilidad);
    }

    private void cambiarVisibilidadFrame(JFrame frame, boolean visibilidad) {
        frame.setVisible(visibilidad);
    }

    private void iniciarTimer() {
        this.timer = new Timer(setDelaySegunLevelInicial(), (ActionEvent e) -> {
            this.xogo.moverFichaAbaixo();
            this.aumentarScore();
            this.xogo.borrarLineasCompletas();
            this.actualizarPanel();
        });
        timer.start();
    }

    private void aumentarScore() {
        int contadorScore = this.xogo.getContadorScore();
        this.xogo.setContadorScore(++contadorScore);
        mostrarScore(this.xogo.getContadorScore());
    }

    public void mostrarScore(int score) {
        this.scoreTextLabel.setText(String.valueOf(score));
    }

    public void mostrarNumeroLineas(int numeroLineas) {
        this.lineasTextLabel.setText(String.valueOf(numeroLineas));
    }

    public void mostrarLevel(int level) {
        this.levelTextLabel.setText(String.valueOf(level));
    }

    public void actualizarPanel() {
        this.panelJuego.updateUI();
    }

    public void pintarCadrado(JLabel lblCadrado) {
        this.panelJuego.add(lblCadrado, new org.netbeans.lib.awtextra.AbsoluteConstraints(lblCadrado.getX(), lblCadrado.getY(), -1, -1));

    }

    public void borrarCadrado(JLabel lblCadrado) {
        this.panelJuego.remove(lblCadrado);

    }


    private void EliminarComponentesPanelJuego() {
        this.panelJuego.removeAll();
    }

    private int comprobarLevelInicialElegido() {

        if (this.easyRadioB.isSelected()) {
            return 2;
        }
        if (this.mediumRadioB.isSelected()) {
            return 4;
        }
        if (this.hardRadioB.isSelected()) {
            return 6;
        }
        if (this.extremeRadioB.isSelected()) {
            return 8;
        } else {
            return 0;
        }
    }

    private int setDelaySegunLevelInicial() {

        if (this.xogo.getLevel() == 2) {
            return 560;
        }
        if (this.xogo.getLevel() == 4) {
            return 320;
        }
        if (this.xogo.getLevel() == 6) {
            return 180;
        }
        if (this.xogo.getLevel() == 8) {
            return 100;
        } else {
            return 1000;
        }
    }

    public JPanel getPanelJuego() {
        return panelJuego;
    }

    public void setPanelJuego(JPanel panelJuego) {
        this.panelJuego = panelJuego;
    }

    public JLabel getLineasTextLabel() {
        return lineasTextLabel;
    }

    public void setLineasTextLabel(JLabel lineasTextLabel) {
        this.lineasTextLabel = lineasTextLabel;
    }

    public JLabel getLevelTextLabel() {
        return levelTextLabel;
    }

    public void setLevelTextLabel(JLabel levelTextLabel) {
        this.levelTextLabel = levelTextLabel;
    }

    public Timer getTimer() {
        return timer;
    }

    public void setTimer(Timer timer) {
        this.timer = timer;
    }

    public Xogo getXogo() {
        return xogo;
    }

    public void setXogo(Xogo xogo) {
        this.xogo = xogo;
    }

    public JLabel getLineasLabel() {
        return LineasLabel;
    }

    public void setLineasLabel(JLabel LineasLabel) {
        this.LineasLabel = LineasLabel;
    }

    public JButton getExitButton() {
        return getExitButtonMenu();
    }

    public void setExitButton(JButton exitButton) {
        this.setExitButtonMenu(exitButton);
    }

    public JFrame getFrameJuego() {
        return frameJuego;
    }

    public void setFrameJuego(JFrame frameJuego) {
        this.frameJuego = frameJuego;
    }

    public JFrame getFrameLevels() {
        return frameLevels;
    }

    public void setFrameLevels(JFrame frameLevels) {
        this.frameLevels = frameLevels;
    }

    public JLabel getGameOverLabel() {
        return gameOverLabel;
    }

    public void setGameOverLabel(JLabel gameOverLabel) {
        this.gameOverLabel = gameOverLabel;
    }

    public JButton getjButton1() {
        return getGameOverOKButton();
    }

    public void setjButton1(JButton jButton1) {
        this.setGameOverOKButton(jButton1);
    }

    public JLabel getJugadorLabel() {
        return jugadorLabel;
    }

    public void setJugadorLabel(JLabel jugadorLabel) {
        this.jugadorLabel = jugadorLabel;
    }

    public JLabel getLabelTituloLevel() {
        return labelTituloLevel;
    }

    public void setLabelTituloLevel(JLabel labelTituloLevel) {
        this.labelTituloLevel = labelTituloLevel;
    }

    public JLabel getLabelTituloTetris() {
        return labelTituloTetris;
    }

    public void setLabelTituloTetris(JLabel labelTituloTetris) {
        this.labelTituloTetris = labelTituloTetris;
    }

    public JLabel getLevelLabel() {
        return levelLabel;
    }

    public void setLevelLabel(JLabel levelLabel) {
        this.levelLabel = levelLabel;
    }

    public JTextField getNombreJugadorLabel() {
        return nombreJugadorLabel;
    }

    public void setNombreJugadorLabel(JTextField nombreJugadorLabel) {
        this.nombreJugadorLabel = nombreJugadorLabel;
    }

    public JPanel getPanelGameOver() {
        return panelGameOver;
    }

    public void setPanelGameOver(JPanel panelGameOver) {
        this.panelGameOver = panelGameOver;
    }

    public JToggleButton getPauseButton() {
        return pauseButton;
    }

    public void setPauseButton(JToggleButton pauseButton) {
        this.pauseButton = pauseButton;
    }

    public JButton getPlayButton() {
        return getPlayButtonMenu();
    }

    public void setPlayButton(JButton playButton) {
        this.setPlayButtonMenu(playButton);
    }

    public JLabel getScoreLabel() {
        return scoreLabel;
    }

    public void setScoreLabel(JLabel scoreLabel) {
        this.scoreLabel = scoreLabel;
    }

    public JLabel getScoreTextLabel() {
        return scoreTextLabel;
    }

    public void setScoreTextLabel(JLabel scoreTextLabel) {
        this.scoreTextLabel = scoreTextLabel;
    }

    public JButton getSettingsButton() {
        return getLevelsButton();
    }

    public void setSettingsButton(JButton settingsButton) {
        this.setLevelsButton(settingsButton);
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public void setjScrollPane1(JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    public JPanel getPanelScores() {
        return panelScores;
    }

    public void setPanelScores(JPanel panelScores) {
        this.panelScores = panelScores;
    }

    public JPanel getPanelFondo() {
        return panelFondo;
    }

    public void setPanelFondo(JPanel panelfondo) {
        this.panelFondo = panelfondo;
    }

    public JTable getScoresTable() {
        return scoresTable;
    }

    public void setScoresTable(JTable scoresTable) {
        this.scoresTable = scoresTable;
    }

    public JLabel getScoresTituloLabel() {
        return scoresTituloLabel;
    }

    public void setScoresTituloLabel(JLabel scoresTituloLabel) {
        this.scoresTituloLabel = scoresTituloLabel;
    }

    /**
     * @return the contadorMusica
     */
    public int getContadorMusica() {
        return contadorMusica;
    }

    /**
     * @param contadorMusica the contadorMusica to set
     */
    public void setContadorMusica(int contadorMusica) {
        this.contadorMusica = contadorMusica;
    }

    /**
     * @return the botonSonidoJuego
     */
    public javax.swing.JButton getBotonSonidoJuego() {
        return botonSonidoJuego;
    }

    /**
     * @param botonSonidoJuego the botonSonidoJuego to set
     */
    public void setBotonSonidoJuego(javax.swing.JButton botonSonidoJuego) {
        this.botonSonidoJuego = botonSonidoJuego;
    }

    /**
     * @return the botonSonidoMenu
     */
    public javax.swing.JButton getBotonSonidoMenu() {
        return botonSonidoMenu;
    }

    /**
     * @param botonSonidoMenu the botonSonidoMenu to set
     */
    public void setBotonSonidoMenu(javax.swing.JButton botonSonidoMenu) {
        this.botonSonidoMenu = botonSonidoMenu;
    }

    /**
     * @return the buttonGroup1
     */
    public javax.swing.ButtonGroup getButtonGroup1() {
        return buttonGroup1;
    }

    /**
     * @param buttonGroup1 the buttonGroup1 to set
     */
    public void setButtonGroup1(javax.swing.ButtonGroup buttonGroup1) {
        this.buttonGroup1 = buttonGroup1;
    }

    /**
     * @return the easyRadioB
     */
    public javax.swing.JRadioButton getEasyRadioB() {
        return easyRadioB;
    }

    /**
     * @param easyRadioB the easyRadioB to set
     */
    public void setEasyRadioB(javax.swing.JRadioButton easyRadioB) {
        this.easyRadioB = easyRadioB;
    }

    /**
     * @return the exitButtonMenu
     */
    public javax.swing.JButton getExitButtonMenu() {
        return exitButtonMenu;
    }

    /**
     * @param exitButtonMenu the exitButtonMenu to set
     */
    public void setExitButtonMenu(javax.swing.JButton exitButtonMenu) {
        this.exitButtonMenu = exitButtonMenu;
    }

    /**
     * @return the exitJuegoGameOverButton
     */
    public javax.swing.JButton getExitJuegoGameOverButton() {
        return exitJuegoTotalScoresButton;
    }

    /**
     * @param exitJuegoGameOverButton the exitJuegoGameOverButton to set
     */
    public void setExitJuegoGameOverButton(javax.swing.JButton exitJuegoGameOverButton) {
        this.exitJuegoTotalScoresButton = exitJuegoGameOverButton;
    }

    /**
     * @return the extremeRadioB
     */
    public javax.swing.JRadioButton getExtremeRadioB() {
        return extremeRadioB;
    }

    /**
     * @param extremeRadioB the extremeRadioB to set
     */
    public void setExtremeRadioB(javax.swing.JRadioButton extremeRadioB) {
        this.extremeRadioB = extremeRadioB;
    }

    /**
     * @return the fondoLabel
     */
    public javax.swing.JLabel getFondoLabel() {
        return fondoLabel;
    }

    /**
     * @param fondoLabel the fondoLabel to set
     */
    public void setFondoLabel(javax.swing.JLabel fondoLabel) {
        this.fondoLabel = fondoLabel;
    }

    /**
     * @return the gameOverOKButton
     */
    public javax.swing.JButton getGameOverOKButton() {
        return gameOverOKButton;
    }

    /**
     * @param gameOverOKButton the gameOverOKButton to set
     */
    public void setGameOverOKButton(javax.swing.JButton gameOverOKButton) {
        this.gameOverOKButton = gameOverOKButton;
    }

    /**
     * @return the hardRadioB
     */
    public javax.swing.JRadioButton getHardRadioB() {
        return hardRadioB;
    }

    /**
     * @param hardRadioB the hardRadioB to set
     */
    public void setHardRadioB(javax.swing.JRadioButton hardRadioB) {
        this.hardRadioB = hardRadioB;
    }

    /**
     * @return the jPanel1
     */
    public javax.swing.JPanel getjPanel1() {
        return panelMenu;
    }

    /**
     * @param jPanel1 the jPanel1 to set
     */
    public void setjPanel1(javax.swing.JPanel jPanel1) {
        this.panelMenu = jPanel1;
    }

    /**
     * @return the labelFondo
     */
    public javax.swing.JLabel getLabelFondo() {
        return labelFondo;
    }

    /**
     * @param labelFondo the labelFondo to set
     */
    public void setLabelFondo(javax.swing.JLabel labelFondo) {
        this.labelFondo = labelFondo;
    }

    /**
     * @return the labelFondoLevels
     */
    public javax.swing.JLabel getLabelFondoLevels() {
        return labelFondoLevels;
    }

    /**
     * @param labelFondoLevels the labelFondoLevels to set
     */
    public void setLabelFondoLevels(javax.swing.JLabel labelFondoLevels) {
        this.labelFondoLevels = labelFondoLevels;
    }

    /**
     * @return the levelsButton
     */
    public javax.swing.JButton getLevelsButton() {
        return levelsButton;
    }

    /**
     * @param levelsButton the levelsButton to set
     */
    public void setLevelsButton(javax.swing.JButton levelsButton) {
        this.levelsButton = levelsButton;
    }

    /**
     * @return the mediumRadioB
     */
    public javax.swing.JRadioButton getmediumRadioB() {
        return mediumRadioB;
    }

    /**
     * @param mediumRadioB the mediumRadioB to set
     */
    public void setMediumRadioB(javax.swing.JRadioButton mediumRadioB) {
        this.mediumRadioB = mediumRadioB;
    }

    /**
     * @return the noobRadioB
     */
    public javax.swing.JRadioButton getNoobRadioB() {
        return noobRadioB;
    }

    /**
     * @param noobRadioB the noobRadioB to set
     */
    public void setNoobRadioB(javax.swing.JRadioButton noobRadioB) {
        this.noobRadioB = noobRadioB;
    }

    /**
     * @return the okButtonLevel
     */
    public javax.swing.JButton getOkButtonLevel() {
        return okButtonLevel;
    }

    /**
     * @param okButtonLevel the okButtonLevel to set
     */
    public void setOkButtonLevel(javax.swing.JButton okButtonLevel) {
        this.okButtonLevel = okButtonLevel;
    }

    /**
     * @return the panelFondoLevels
     */
    public javax.swing.JPanel getPanelFondoLevels() {
        return panelFondoLevels;
    }

    /**
     * @param panelFondoLevels the panelFondoLevels to set
     */
    public void setPanelFondoLevels(javax.swing.JPanel panelFondoLevels) {
        this.panelFondoLevels = panelFondoLevels;
    }

    /**
     * @return the playButtonMenu
     */
    public javax.swing.JButton getPlayButtonMenu() {
        return playButtonMenu;
    }

    /**
     * @param playButtonMenu the playButtonMenu to set
     */
    public void setPlayButtonMenu(javax.swing.JButton playButtonMenu) {
        this.playButtonMenu = playButtonMenu;
    }

    /**
     * @return the retryGameOverButton
     */
    public javax.swing.JButton getRetryGameOverButton() {
        return retryGameOverButton;
    }

    /**
     * @param retryGameOverButton the retryGameOverButton to set
     */
    public void setRetryGameOverButton(javax.swing.JButton retryGameOverButton) {
        this.retryGameOverButton = retryGameOverButton;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LineasLabel;
    private javax.swing.JButton botonSonidoJuego;
    private javax.swing.JButton botonSonidoMenu;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton easyRadioB;
    private javax.swing.JButton exitButtonMenu;
    private javax.swing.JButton exitJuegoGameOverButton;
    private javax.swing.JButton exitJuegoTotalScoresButton;
    private javax.swing.JButton exitPanelPausaButton;
    private javax.swing.JRadioButton extremeRadioB;
    private javax.swing.JLabel fondoLabel;
    private javax.swing.JFrame frameJuego;
    private javax.swing.JFrame frameLevels;
    private javax.swing.JLabel gameOverLabel;
    private javax.swing.JButton gameOverOKButton;
    private javax.swing.JRadioButton hardRadioB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jugadorLabel;
    private javax.swing.JLabel labelFondo;
    private javax.swing.JLabel labelFondo1;
    private javax.swing.JLabel labelFondoLevels;
    private javax.swing.JLabel labelTituloLevel;
    private javax.swing.JLabel labelTituloTetris;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JLabel levelTextLabel;
    private javax.swing.JButton levelsButton;
    private javax.swing.JLabel lineasTextLabel;
    private javax.swing.JRadioButton mediumRadioB;
    private javax.swing.JButton menuJuegoTotalScoresButton;
    private javax.swing.JButton menuPanelPausaButton;
    private javax.swing.JTextField nombreJugadorLabel;
    private javax.swing.JRadioButton noobRadioB;
    private javax.swing.JButton okButtonLevel;
    private javax.swing.JPanel panelFondo;
    private javax.swing.JPanel panelFondoLevels;
    private javax.swing.JPanel panelGameOver;
    private javax.swing.JPanel panelJuego;
    private javax.swing.JPanel panelMenu;
    private javax.swing.JPanel panelPausa;
    private javax.swing.JPanel panelScores;
    private javax.swing.JToggleButton pauseButton;
    private javax.swing.JButton playButtonMenu;
    private javax.swing.JButton retryGameOverButton;
    private javax.swing.JButton retryPanelPausaButton;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JLabel scoreTextLabel;
    private javax.swing.JTable scoresTable;
    private javax.swing.JLabel scoresTituloLabel;
    // End of variables declaration//GEN-END:variables

}
